<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Fee Structure Management</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .table-responsive {
            overflow-x: auto;
        }
        .fee-input:invalid {
            border-color: red;
        }
        .status-badge {
            padding: 0.25em 0.6em;
            border-radius: 0.25rem;
            font-size: 0.85em;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container">
            <a class="navbar-brand" href="#">School Fee Management</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link active" href="/fee-structure">Fee Structure</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/fee-records">Fee Records</a>
                    </li>
                </ul>
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/logout">Logout</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container mt-4">
        <!-- Fee Structure Form -->
        <div class="card mb-4">
            <div class="card-header">
                <h4 class="mb-0">Add/Update Fee Structure</h4>
            </div>
            <div class="card-body">
                <form id="feeForm" method="POST" action="/submit-fee">
                    <div class="row g-3">
                        <!-- Form fields -->
                        <div class="col-md-4">
                            <label for="batch" class="form-label">Batch Year</label>
                            <select class="form-select" id="batch" name="batch" required>
                                <option value="">Select Batch</option>
                                <!-- Dynamic year options -->
                                <script>
                                    const currentYear = new Date().getFullYear();
                                    for(let year = currentYear; year <= currentYear + 5; year++) {
                                        document.write(`<option value="${year}">${year}</option>`);
                                    }
                                </script>
                            </select>
                        </div>

                        <div class="col-md-4">
                            <label for="syllabus" class="form-label">Syllabus</label>
                            <select class="form-select" id="syllabus" name="syllabus" required>
                                <option value="">Select Syllabus</option>
                                <option value="STATE">STATE</option>
                                <option value="ICSE">ICSE</option>
                                <option value="CBSE">CBSE</option>
                            </select>
                        </div>

                        <div class="col-md-4">
                            <label for="class" class="form-label">Class</label>
                            <select class="form-select" id="class" name="class" required>
                                <option value="">Select Class</option>
                                <script>
                                    for(let i = 1; i <= 10; i++) {
                                        document.write(`<option value="${i}">Class ${i}</option>`);
                                    }
                                </script>
                            </select>
                        </div>

                        <!-- Fee Input Fields -->
                        <div class="col-md-4">
                            <label for="academicFee" class="form-label">Academic Fee (₹)</label>
                            <input type="number" class="form-control fee-input" id="academicFee" name="academicFee" min="0" required>
                        </div>

                        <div class="col-md-4">
                            <label for="transportationFee" class="form-label">Transportation Fee (₹)</label>
                            <input type="number" class="form-control fee-input" id="transportationFee" name="transportationFee" min="0" required>
                        </div>

                        <div class="col-md-4">
                            <label for="booksFee" class="form-label">Books Fee (₹)</label>
                            <input type="number" class="form-control fee-input" id="booksFee" name="booksFee" min="0" required>
                        </div>

                        <div class="col-md-4">
                            <label for="uniformFee" class="form-label">Uniform Fee (₹)</label>
                            <input type="number" class="form-control fee-input" id="uniformFee" name="uniformFee" min="0" required>
                        </div>

                        <div class="col-md-4">
                            <label for="sportsFee" class="form-label">Sports Fee (₹)</label>
                            <input type="number" class="form-control fee-input" id="sportsFee" name="sportsFee" min="0" required>
                        </div>

                        <div class="col-md-4">
                            <label for="annualFunctionFee" class="form-label">Annual Function Fee (₹)</label>
                            <input type="number" class="form-control fee-input" id="annualFunctionFee" name="annualFunctionFee" min="0" required>
                        </div>

                        <div class="col-md-4">
                            <label for="totalFee" class="form-label">Total Fee (₹)</label>
                            <input type="number" class="form-control" id="totalFee" name="totalFee" readonly>
                        </div>

                        <div class="col-12">
                            <button type="submit" class="btn btn-primary">Submit</button>
                            <button type="reset" class="btn btn-secondary">Reset</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <!-- Fee Records Table -->
        <div class="card">
            <div class="card-header">
                <div class="d-flex justify-content-between align-items-center">
                    <h4 class="mb-0">Fee Structure Records</h4>
                    <div class="d-flex gap-2">
                        <select id="syllabusFilter" class="form-select form-select-sm" style="width: auto;">
                            <option value="">All Syllabi</option>
                            <option value="STATE">STATE</option>
                            <option value="ICSE">ICSE</option>
                            <option value="CBSE">CBSE</option>
                        </select>
                        <select id="batchFilter" class="form-select form-select-sm" style="width: auto;">
                            <option value="">All Batches</option>
                            <script>
                                for(let year = currentYear - 2; year <= currentYear + 5; year++) {
                                    document.write(`<option value="${year}">${year}</option>`);
                                }
                            </script>
                        </select>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>Batch</th>
                                <th>Syllabus</th>
                                <th>Class</th>
                                <th>Academic Fee</th>
                                <th>Transportation</th>
                                <th>Books</th>
                                <th>Uniform</th>
                                <th>Sports</th>
                                <th>Annual Function</th>
                                <th>Total Fee</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="feeRecordsBody">
                            <!-- Data will be populated dynamically -->
                        </tbody>
                    </table>
                </div>
                <!-- Pagination -->
                <nav aria-label="Page navigation" class="mt-4">
                    <ul class="pagination justify-content-center" id="pagination">
                        <!-- Pagination will be populated dynamically -->
                    </ul>
                </nav>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script> 
    function updatePagination(currentPage, totalPages) {
    const pagination = document.getElementById('pagination');
    pagination.innerHTML = '';
    
    // Previous button
    pagination.innerHTML += `
        <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
            <a class="page-link" href="#" data-page="${currentPage - 1}">Previous</a>
        </li>
    `;
    
    // Next button
    pagination.innerHTML += `
        <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
            <a class="page-link" href="#" data-page="${currentPage + 1}">Next</a>
        </li>
    `;

    // Add click handlers
    pagination.querySelectorAll('.page-link:not(.disabled)').forEach(link => {
        link.addEventListener('click', (e) => {
            e.preventDefault();
            const page = parseInt(e.target.dataset.page);
            loadFeeRecords(page);
        });
    });
}
    
document.addEventListener('DOMContentLoaded', () => {
    const feeForm = document.getElementById('feeForm');
    const feeInputs = document.querySelectorAll('.fee-input');
    
    // Calculate total when any fee input changes
    feeInputs.forEach(input => {
        input.addEventListener('input', calculateTotal);
    });

    function calculateTotal() {
        const total = Array.from(feeInputs).reduce((sum, input) => {
            return sum + (parseFloat(input.value) || 0);
        }, 0);
        document.getElementById('totalFee').value = total.toFixed(2);
    }

    // Handle form submission
    feeForm.addEventListener('submit', async (event) => {
        event.preventDefault();

        const batchValue = document.getElementById('batch').value;
        const syllabusValue = document.getElementById('syllabus').value;
        const classValue = document.getElementById('class').value;

        // Validation
        if (!batchValue) {
            alert("Please select a Batch Year");
            return;
        }
        if (!syllabusValue) {
            alert("Please select a Syllabus");
            return;
        }
        if (!classValue) {
            alert("Please select a Class");
            return;
        }

        const formData = {
            batch: batchValue,
            syllabus: syllabusValue,
            class: classValue,
            academicFee: parseFloat(document.getElementById('academicFee').value) || 0,
            transportationFee: parseFloat(document.getElementById('transportationFee').value) || 0,
            booksFee: parseFloat(document.getElementById('booksFee').value) || 0,
            uniformFee: parseFloat(document.getElementById('uniformFee').value) || 0,
            sportsFee: parseFloat(document.getElementById('sportsFee').value) || 0,
            annualFunctionFee: parseFloat(document.getElementById('annualFunctionFee').value) || 0,
            totalFee: parseFloat(document.getElementById('totalFee').value) || 0
        };

        try {
            const response = await fetch('/submit-fee', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            });

            const result = await response.json();
            
            if (result.success) {
                alert('Fee structure saved successfully!');
                feeForm.reset();
                loadFeeRecords();
            } else {
                alert(result.message || 'Error saving fee structure');
            }
        } catch (error) {
            console.error('Error:', error);
            alert('Error submitting form. Please try again.');
        }
    });

    // Update Pagination Function
    function updatePagination(currentPage, totalPages) {
        const pagination = document.getElementById('pagination');
        pagination.innerHTML = '';
        
        // Previous button
        pagination.innerHTML += `
            <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                <a class="page-link" href="#" data-page="${currentPage - 1}">Previous</a>
            </li>
        `;
        
        // Next button
        pagination.innerHTML += `
            <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                <a class="page-link" href="#" data-page="${currentPage + 1}">Next</a>
            </li>
        `;

        // Add click handlers
        pagination.querySelectorAll('.page-link:not(.disabled)').forEach(link => {
            link.addEventListener('click', (e) => {
                e.preventDefault();
                const page = parseInt(e.target.dataset.page);
                loadFeeRecords(page);
            });
        });
    }

    // Load Fee Records Function
    async function loadFeeRecords(page = 1) {
        try {
            const syllabusFilter = document.getElementById('syllabusFilter').value;
            const batchFilter = document.getElementById('batchFilter').value;
            
            const queryParams = new URLSearchParams({
                page,
                syllabus: syllabusFilter,
                batch: batchFilter
            });
            
            const response = await fetch(`/fee-records?${queryParams}`);
            const data = await response.json();
            
            const tbody = document.getElementById('feeRecordsBody');
            tbody.innerHTML = '';
            
            if (!data.records || data.records.length === 0) {
                tbody.innerHTML = `
                    <tr>
                        <td colspan="11" class="text-center py-4">
                            No records found for the selected filters
                        </td>
                    </tr>`;
                return;
            }
            
            data.records.forEach(record => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${record.batch}</td>
                    <td>${record.syllabus}</td>
                    <td>Class ${record.class}</td>
                    <td>₹${record.academicFee}</td>
                    <td>₹${record.transportationFee}</td>
                    <td>₹${record.booksFee}</td>
                    <td>₹${record.uniformFee}</td>
                    <td>₹${record.sportsFee}</td>
                    <td>₹${record.annualFunctionFee}</td>
                    <td>₹${record.totalFee}</td>
                    <td>
                        <button class="btn btn-sm btn-warning edit-btn" data-id="${record.id}">Edit</button>
                        <button class="btn btn-sm btn-danger delete-btn" data-id="${record.id}">Delete</button>
                    </td>
                `;
                tbody.appendChild(row);
            });

            // Add event listeners for edit and delete buttons
            document.querySelectorAll('.edit-btn').forEach(btn => {
                btn.addEventListener('click', handleEdit);
            });

            document.querySelectorAll('.delete-btn').forEach(btn => {
                btn.addEventListener('click', handleDelete);
            });

            // Update pagination
            updatePagination(data.pagination.currentPage, data.pagination.totalPages);
        } catch (error) {
            console.error('Error loading records:', error);
        }
    }

    // Handle Edit Function
    async function handleEdit(event) {
        const id = event.target.dataset.id;
        
        try {
            const response = await fetch(`/api/fee-structure/${id}`);
            const data = await response.json();
            
            if (data.success) {
                const record = data.record;
                
                // Populate form with existing data
                document.getElementById('batch').value = record.batch;
                document.getElementById('syllabus').value = record.syllabus;
                document.getElementById('class').value = record.class;
                document.getElementById('academicFee').value = record.academicFee;
                document.getElementById('transportationFee').value = record.transportationFee;
                document.getElementById('booksFee').value = record.booksFee;
                document.getElementById('uniformFee').value = record.uniformFee;
                document.getElementById('sportsFee').value = record.sportsFee;
                document.getElementById('annualFunctionFee').value = record.annualFunctionFee;
                document.getElementById('totalFee').value = record.totalFee;
            }
        } catch (error) {
            console.error('Error fetching record:', error);
            alert('Failed to fetch record details');
        }
    }

    // Handle Delete Function
    async function handleDelete(event) {
        const id = event.target.dataset.id;
        
        if (!confirm('Are you sure you want to delete this fee structure?')) return;
        
        try {
            const response = await fetch(`/api/fee-structure/${id}`, {
                method: 'DELETE'
            });
            
            const result = await response.json();
            
            if (result.success) {
                alert('Record deleted successfully');
                loadFeeRecords(); // Reload records
            } else {
                alert(result.message || 'Failed to delete record');
            }
        } catch (error) {
            console.error('Error deleting record:', error);
            alert('Failed to delete record');
        }
    }

    // Add event listeners for filters
    document.getElementById('syllabusFilter')?.addEventListener('change', loadFeeRecords);
    document.getElementById('batchFilter')?.addEventListener('change', loadFeeRecords);

    // Initial load of records
    loadFeeRecords();
});
</script>

</body>
</html>